{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","forum/tests/acceptance/create-question-test.js","forum/tests/app.lint-test.js","forum/tests/helpers/destroy-app.js","forum/tests/helpers/ember-keyboard/register-test-helpers.js","forum/tests/helpers/module-for-acceptance.js","forum/tests/helpers/resolver.js","forum/tests/helpers/start-app.js","forum/tests/integration/components/answer-home-test.js","forum/tests/integration/components/answer-new-test.js","forum/tests/integration/components/intro-home-test.js","forum/tests/integration/components/question-home-test.js","forum/tests/integration/components/question-new-test.js","forum/tests/integration/components/question-qpage-test.js","forum/tests/test-helper.js","forum/tests/tests.lint-test.js","forum/tests/unit/adapters/application-test.js","forum/tests/unit/models/answer-test.js","forum/tests/unit/models/question-test.js","forum/tests/unit/routes/index-test.js","forum/tests/unit/routes/questions-test.js","forum/tests/unit/routes/questions/answers-test.js","forum/tests/unit/routes/questions/answers/new-test.js","forum/tests/unit/routes/questions/new-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('forum/tests/acceptance/create-question-test', ['qunit', 'forum/tests/helpers/module-for-acceptance'], function (_qunit, _moduleForAcceptance) {\n  'use strict';\n\n  (0, _moduleForAcceptance.default)('Acceptance | create question');\n\n  (0, _qunit.test)('visiting /create-question', function (assert) {\n    visit('/question/new');\n    fillIn('input.askedBy', 'Arvind');\n    fillIn('input.question', 'This was generated by Test');\n    click('button.submit');\n    andThen(function () {\n      assert.equal(currentURL(), '');\n      assert.equal(find('div.question-div:last div:first h6').text(), 'This was generated by Test');\n    });\n  });\n});","define('forum/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/answer-home.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/answer-home.js should pass ESLint\\n\\n16:8 - \\'self\\' is assigned a value but never used. (no-unused-vars)\\n18:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)\\n19:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)\\n20:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)');\n  });\n\n  QUnit.test('components/answer-new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/answer-new.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/intro-home.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/intro-home.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/question-home.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/question-home.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/question-new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/question-new.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/question-qpage.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/question-qpage.js should pass ESLint\\n\\n8:4 - Unexpected console statement. (no-console)\\n12:7 - \\'Materialize\\' is not defined. (no-undef)\\n13:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)\\n14:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)\\n15:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)\\n16:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)\\n17:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)\\n18:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)\\n19:6 - \\'Materialize\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('models/answer.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/answer.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('models/question.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/question.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/questions.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/questions.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/questions/answers.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/questions/answers.js should pass ESLint\\n\\n6:3 - Unexpected console statement. (no-console)\\n8:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)\\n9:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)\\n10:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)\\n11:2 - Mixed spaces and tabs. (no-mixed-spaces-and-tabs)\\n18:5 - \\'Materialize\\' is not defined. (no-undef)\\n26:5 - \\'Materialize\\' is not defined. (no-undef)\\n30:4 - Unexpected console statement. (no-console)\\n32:24 - \\'answer\\' is defined but never used. (no-unused-vars)\\n33:5 - \\'Materialize\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('routes/questions/answers/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/questions/answers/new.js should pass ESLint\\n\\n9:4 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('routes/questions/new.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/questions/new.js should pass ESLint\\n\\n10:25 - \\'place\\' is defined but never used. (no-unused-vars)\\n11:5 - \\'Materialize\\' is not defined. (no-undef)');\n  });\n});","define('forum/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    Ember.run(application, 'destroy');\n  }\n});","define('forum/tests/helpers/ember-keyboard/register-test-helpers', ['exports', 'ember-keyboard', 'ember-keyboard/fixtures/modifiers-array', 'ember-keyboard/fixtures/mouse-buttons-array', 'ember-keyboard/utils/get-cmd-key'], function (exports, _emberKeyboard, _modifiersArray, _mouseButtonsArray, _getCmdKey) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function () {\n    registerAsyncHelper('keyDown', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'keydown', element);\n    });\n\n    registerAsyncHelper('keyUp', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'keyup', element);\n    });\n\n    registerAsyncHelper('keyPress', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'keypress', element);\n    });\n\n    registerAsyncHelper('mouseDown', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'mousedown', element);\n    });\n\n    registerAsyncHelper('mouseUp', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'mouseup', element);\n    });\n\n    registerAsyncHelper('touchStart', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'touchstart', element);\n    });\n\n    registerAsyncHelper('touchEnd', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'touchend', element);\n    });\n  };\n\n  var registerAsyncHelper = Ember.Test.registerAsyncHelper;\n\n\n  var keyEvent = function keyEvent(app, attributes, type, element) {\n    var event = (attributes || '').split('+').reduce(function (event, attribute) {\n      if (_modifiersArray.default.indexOf(attribute) > -1) {\n        attribute = attribute === 'cmd' ? (0, _getCmdKey.default)() : attribute;\n        event[attribute + 'Key'] = true;\n      } else if (_mouseButtonsArray.default.indexOf(attribute) > -1) {\n        event.button = (0, _emberKeyboard.getMouseCode)(attribute);\n      } else {\n        event.keyCode = (0, _emberKeyboard.getKeyCode)(attribute);\n      }\n\n      return event;\n    }, {});\n\n    return app.testHelpers.triggerEvent(element || document.body, type, event);\n  };\n});","define('forum/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'forum/tests/helpers/start-app', 'forum/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return resolve(afterEach).then(function () {\n          return (0, _destroyApp.default)(_this.application);\n        });\n      }\n    });\n  };\n\n  var resolve = Ember.RSVP.resolve;\n});","define('forum/tests/helpers/resolver', ['exports', 'forum/resolver', 'forum/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('forum/tests/helpers/start-app', ['exports', 'forum/app', 'forum/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    var attributes = Ember.merge({}, _environment.default.APP);\n    attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n    return Ember.run(function () {\n      var application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('forum/tests/integration/components/answer-home-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('answer-home', 'Integration | Component | answer home', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"a7dXN1cA\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"answer-home\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"LXQkh4vs\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"answer-home\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('forum/tests/integration/components/answer-new-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('answer-new', 'Integration | Component | answer new', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"GSYHvM2W\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"answer-new\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"5iGae4A/\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"answer-new\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('forum/tests/integration/components/intro-home-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('intro-home', 'Integration | Component | intro home', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"BCt0/LRl\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"intro-home\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"pHCaol5e\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"intro-home\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('forum/tests/integration/components/question-home-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('question-home', 'Integration | Component | question home', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"QVpd/Nd7\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"question-home\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"vexSowbQ\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"question-home\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('forum/tests/integration/components/question-new-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('question-new', 'Integration | Component | question new', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"Z+c392ID\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"question-new\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"am/gWrEI\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"question-new\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('forum/tests/integration/components/question-qpage-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('question-qpage', 'Integration | Component | question qpage', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"JpThn/Pl\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"question-qpage\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"KQRIQAUp\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"question-qpage\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('forum/tests/test-helper', ['forum/tests/helpers/resolver', 'ember-qunit', 'ember-cli-qunit'], function (_resolver, _emberQunit, _emberCliQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_resolver.default);\n  (0, _emberCliQunit.start)();\n});","define('forum/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('acceptance/create-question-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/create-question-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/answer-home-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/answer-home-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/answer-new-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/answer-new-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/intro-home-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/intro-home-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/question-home-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/question-home-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/question-new-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/question-new-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/question-qpage-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/question-qpage-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/adapters/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/adapters/application-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/answer-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/answer-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/models/question-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/question-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/questions-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/questions-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/questions/answers-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/questions/answers-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/questions/answers/new-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/questions/answers/new-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/questions/new-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/questions/new-test.js should pass ESLint\\n\\n');\n  });\n});","define('forum/tests/unit/adapters/application-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('forum/tests/unit/models/answer-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('answer', 'Unit | Model | answer', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('forum/tests/unit/models/question-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForModel)('question', 'Unit | Model | question', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('forum/tests/unit/routes/index-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('forum/tests/unit/routes/questions-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:questions', 'Unit | Route | questions', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('forum/tests/unit/routes/questions/answers-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:questions/answers', 'Unit | Route | questions/answers', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('forum/tests/unit/routes/questions/answers/new-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:questions/answers/new', 'Unit | Route | questions/answers/new', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('forum/tests/unit/routes/questions/new-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleFor)('route:questions/new', 'Unit | Route | questions/new', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","require('forum/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;","file":"tests.js"}